{"ast":null,"code":"var _jsxFileName = \"/Users/jianxun/SCTP/Module 2/2. Assignments/2.9-Assignment/assignment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { PropagateLoader } from \"react-spinners\";\nimport \"./App.css\";\nimport GovApi from \"./api/GovAPI\";\nimport axios from \"axios\";\nimport { Map } from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      setIsLoading(true);\n      const datasetId = \"d_dbfabf16158d1b0e1c420627c0819168\";\n      const response = await GovApi.get(`${datasetId}/poll-download`);\n      const jsonData = response.data;\n\n      if (jsonData.code !== 0) {\n        throw new Error(jsonData.errorMsg);\n      }\n\n      const fetchUrl = jsonData.data.url;\n      const innerResponse = await axios.get(fetchUrl, {\n        responseType: \"text\"\n      });\n      setData(innerResponse.data.features); // console.log(innerResponse.data.features);\n\n      console.log(\"âœ… loaded data successfully\");\n    } catch (error) {\n      console.error(\"ðŸš¨ error: \", error.message);\n    } finally {\n      console.log(\"ðŸŽ‰ completed\");\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // useEffect(() => {\n  //   if (data) {\n  //     console.log(\"Updated data:\", data); // This will log the updated state\n  //   }\n  // }, [data]);\n\n  const coorArray = data.map(item => item.geometry.coordinates);\n  console.log(\"coordinates array\", coorArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dengue Clusters List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      disabled: isLoading,\n      children: isLoading ? \"Loading...\" : \"Load Dengue Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v8Y4+d8uhyQeFY8qNgwvre/Ymlo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","PropagateLoader","GovApi","axios","Map","App","isLoading","setIsLoading","data","setData","getData","datasetId","response","get","jsonData","code","Error","errorMsg","fetchUrl","url","innerResponse","responseType","features","console","log","error","message","coorArray","map","item","geometry","coordinates"],"sources":["/Users/jianxun/SCTP/Module 2/2. Assignments/2.9-Assignment/assignment/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { PropagateLoader } from \"react-spinners\";\nimport \"./App.css\";\nimport GovApi from \"./api/GovAPI\";\nimport axios from \"axios\";\nimport { Map } from \"leaflet\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      setIsLoading(true);\n      const datasetId = \"d_dbfabf16158d1b0e1c420627c0819168\";\n      const response = await GovApi.get(`${datasetId}/poll-download`);\n      const jsonData = response.data;\n      if (jsonData.code !== 0) {\n        throw new Error(jsonData.errorMsg);\n      }\n      const fetchUrl = jsonData.data.url;\n      const innerResponse = await axios.get(fetchUrl, { responseType: \"text\" });\n      setData(innerResponse.data.features);\n      // console.log(innerResponse.data.features);\n      console.log(\"âœ… loaded data successfully\");\n    } catch (error) {\n      console.error(\"ðŸš¨ error: \", error.message);\n    } finally {\n      console.log(\"ðŸŽ‰ completed\");\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     console.log(\"Updated data:\", data); // This will log the updated state\n  //   }\n  // }, [data]);\n\n  const coorArray = data.map((item) => item.geometry.coordinates);\n\n  console.log(\"coordinates array\", coorArray);\n  return (\n    <div className=\"App\">\n      <h1>Dengue Clusters List</h1>\n      <button onClick={getData} disabled={isLoading}>\n        {isLoading ? \"Loading...\" : \"Load Dengue Data\"}\n      </button>\n      {/* <Map coordinates={coorArray} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMW,OAAO,GAAG,YAAY;IAC1B,IAAI;MACFH,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMI,SAAS,GAAG,oCAAlB;MACA,MAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAY,GAAEF,SAAU,gBAAxB,CAAvB;MACA,MAAMG,QAAQ,GAAGF,QAAQ,CAACJ,IAA1B;;MACA,IAAIM,QAAQ,CAACC,IAAT,KAAkB,CAAtB,EAAyB;QACvB,MAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,QAAnB,CAAN;MACD;;MACD,MAAMC,QAAQ,GAAGJ,QAAQ,CAACN,IAAT,CAAcW,GAA/B;MACA,MAAMC,aAAa,GAAG,MAAMjB,KAAK,CAACU,GAAN,CAAUK,QAAV,EAAoB;QAAEG,YAAY,EAAE;MAAhB,CAApB,CAA5B;MACAZ,OAAO,CAACW,aAAa,CAACZ,IAAd,CAAmBc,QAApB,CAAP,CAVE,CAWF;;MACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACD,CAbD,CAaE,OAAOC,KAAP,EAAc;MACdF,OAAO,CAACE,KAAR,CAAc,YAAd,EAA4BA,KAAK,CAACC,OAAlC;IACD,CAfD,SAeU;MACRH,OAAO,CAACC,GAAR,CAAY,cAAZ;MACAjB,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CApBD;;EAsBAP,SAAS,CAAC,MAAM;IACdU,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT,CA1Ba,CA8Bb;EACA;EACA;EACA;EACA;;EAEA,MAAMiB,SAAS,GAAGnB,IAAI,CAACoB,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,WAAjC,CAAlB;EAEAR,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,SAAjC;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEjB,OAAjB;MAA0B,QAAQ,EAAEJ,SAApC;MAAA,UACGA,SAAS,GAAG,YAAH,GAAkB;IAD9B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}