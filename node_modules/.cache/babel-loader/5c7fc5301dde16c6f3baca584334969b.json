{"ast":null,"code":"var _jsxFileName = \"/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js\",\n    _s = $RefreshSig$();\n\nimport mockApi from \"./api/mockApi\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"‚úÖ loaded products successfully\");\n  //       console.log(\"‚úÖ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"‚ùå error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"üëç completed\");\n  //     });\n  // };\n  const [isloading, setisLoading] = useState(false);\n\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    // use try-catch-finally block to catch the errors. if there's error in try block, it will jump straight to catch error block\n    try {\n      const response = await mockApi.get(\"/product\");\n      console.log(\"‚úÖ loaded products successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProducts,\n      children: \"get products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jyDbW/RepAwp69v1M4ZL6fF25yk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mockApi","useState","App","isloading","setisLoading","getProducts","response","get","console","log","error","message"],"sources":["/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js"],"sourcesContent":["import mockApi from \"./api/mockApi\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"‚úÖ loaded products successfully\");\n  //       console.log(\"‚úÖ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"‚ùå error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"üëç completed\");\n  //     });\n  // };\n  const [isloading, setisLoading] = useState(false);\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    // use try-catch-finally block to catch the errors. if there's error in try block, it will jump straight to catch error block\n    try {\n      const response = await mockApi.get(\"/product\");\n      console.log(\"‚úÖ loaded products successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1>Product List</h1>\n      <button onClick={getProducts}>get products</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;;EACA,MAAMI,WAAW,GAAG,YAAY;IAC9B;IACA;IACA;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAY,UAAZ,CAAvB;MACAC,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;IACD,CAJD,CAIE,OAAOI,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAK,CAACC,OAA7B;IACD,CAND,SAMU;MACRH,OAAO,CAACC,GAAR,CAAY,cAAZ;IACD;EACF,CAbD;;EAcA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEJ,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAzCQH,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}