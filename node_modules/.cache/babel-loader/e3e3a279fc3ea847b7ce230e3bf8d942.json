{"ast":null,"code":"var _jsxFileName = \"/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js\";\nimport mockApi from \"./api/mockApi\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"✅ loaded products successfully\");\n  //       console.log(\"✅ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"❌ error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"👍 completed\");\n  //     });\n  // };\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    const reponse = await mockApi.get(\"/product\");\n    console.log(\"✅ loaded products successfully\");\n    console.log(\"✅ response\", response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProducts,\n      children: \"get products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mockApi","App","getProducts","reponse","get","console","log","response"],"sources":["/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js"],"sourcesContent":["import mockApi from \"./api/mockApi\";\nimport \"./App.css\";\n\nfunction App() {\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"✅ loaded products successfully\");\n  //       console.log(\"✅ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"❌ error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"👍 completed\");\n  //     });\n  // };\n\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    const reponse = await mockApi.get(\"/product\");\n    console.log(\"✅ loaded products successfully\");\n    console.log(\"✅ response\", response);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Product List</h1>\n      <button onClick={getProducts}>get products</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAMC,WAAW,GAAG,YAAY;IAC9B;IACA;IACA,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,GAAR,CAAY,UAAZ,CAAtB;IACAC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;EACD,CAND;;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEL,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAlCQD,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}