{"ast":null,"code":"var _jsxFileName = \"/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js\",\n    _s = $RefreshSig$();\n\nimport mockApi from \"./api/mockApi\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"‚úÖ loaded products successfully\");\n  //       console.log(\"‚úÖ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"‚ùå error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"üëç completed\");\n  //     });\n  // };\n  // set a state to tell user is the app is loading or not\n  const [isloading, setisLoading] = useState(false);\n\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    // use try-catch-finally block to catch the errors. if there's error in try block, it will jump straight to catch error block, the remaining code in try block will never run\n    try {\n      setisLoading(true);\n      const response = await mockApi.get(\"/product\");\n      console.log(\"‚úÖ loaded products successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n      setisLoading(false);\n    }\n  };\n\n  const getProduct = async id => {\n    try {\n      setisLoading(true);\n      const response = await mockApi.get(`/product/${id}`);\n      console.log(\"‚úÖ loaded one product successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n      setisLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProducts,\n      disabled: isloading,\n      children: isloading ? \"loading\" : \"load products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getProduct(222),\n      disabled: isloading,\n      children: isloading ? \"loading one product\" : \"load one product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(BeatLoader, {\n        color: \"cyan\",\n        loading: isloading,\n        size: \"10px\",\n        speedMultiplier: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jyDbW/RepAwp69v1M4ZL6fF25yk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mockApi","useState","BeatLoader","App","isloading","setisLoading","getProducts","response","get","console","log","error","message","getProduct","id","display","justifyContent","alignItems","marginTop"],"sources":["/Users/jianxun/SCTP/Module 2/1. Lessons/6m-software-2.9-react-axios/lesson-2.9/src/App.js"],"sourcesContent":["import mockApi from \"./api/mockApi\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nfunction App() {\n  // const getProductsThen = () => {\n  //   // this is getting the base URL and adding /product behind\n  //   // \"mockApi.get(\"/product\")\" will get a promise, which is a future data\n  //   //\".then\" will consume the promise to get the response data\n  //   mockApi\n  //     .get(\"/product\")\n  //     .then((response) => {\n  //       console.log(\"‚úÖ loaded products successfully\");\n  //       console.log(\"‚úÖ response\", response);\n  //     })\n  //     // axios will throw errors depending on the response of the server\n  //     .catch((error) => {\n  //       console.log(\"‚ùå error\", error);\n  //     })\n  //     // .finally will be run be it successful or error\n  //     .finally(() => {\n  //       console.log(\"üëç completed\");\n  //     });\n  // };\n\n  // set a state to tell user is the app is loading or not\n  const [isloading, setisLoading] = useState(false);\n\n  const getProducts = async () => {\n    // use await to consume promise\n    // await can only be use at top level and with async\n    // use try-catch-finally block to catch the errors. if there's error in try block, it will jump straight to catch error block, the remaining code in try block will never run\n    try {\n      setisLoading(true);\n      const response = await mockApi.get(\"/product\");\n      console.log(\"‚úÖ loaded products successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n      setisLoading(false);\n    }\n  };\n\n  const getProduct = async (id) => {\n    try {\n      setisLoading(true);\n      const response = await mockApi.get(`/product/${id}`);\n      console.log(\"‚úÖ loaded one product successfully\");\n      console.log(\"‚úÖ response\", response);\n    } catch (error) {\n      console.log(\"‚ùå error\", error.message);\n    } finally {\n      console.log(\"üëç completed\");\n      setisLoading(false);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1>Product List</h1>\n      <button onClick={getProducts} disabled={isloading}>\n        {isloading ? \"loading\" : \"load products\"}\n      </button>\n\n      <button onClick={() => getProduct(222)} disabled={isloading}>\n        {isloading ? \"loading one product\" : \"load one product\"}\n      </button>\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: 20,\n        }}\n      >\n        <BeatLoader\n          color=\"cyan\"\n          loading={isloading}\n          size=\"10px\"\n          speedMultiplier={2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMK,WAAW,GAAG,YAAY;IAC9B;IACA;IACA;IACA,IAAI;MACFD,YAAY,CAAC,IAAD,CAAZ;MACA,MAAME,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAY,UAAZ,CAAvB;MACAC,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;IACD,CALD,CAKE,OAAOI,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAK,CAACC,OAA7B;IACD,CAPD,SAOU;MACRH,OAAO,CAACC,GAAR,CAAY,cAAZ;MACAL,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAfD;;EAiBA,MAAMQ,UAAU,GAAG,MAAOC,EAAP,IAAc;IAC/B,IAAI;MACFT,YAAY,CAAC,IAAD,CAAZ;MACA,MAAME,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAa,YAAWM,EAAG,EAA3B,CAAvB;MACAL,OAAO,CAACC,GAAR,CAAY,mCAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;IACD,CALD,CAKE,OAAOI,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAK,CAACC,OAA7B;IACD,CAPD,SAOU;MACRH,OAAO,CAACC,GAAR,CAAY,cAAZ;MACAL,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAZD;;EAaA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEC,WAAjB;MAA8B,QAAQ,EAAEF,SAAxC;MAAA,UACGA,SAAS,GAAG,SAAH,GAAe;IAD3B;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAQ,OAAO,EAAE,MAAMS,UAAU,CAAC,GAAD,CAAjC;MAAwC,QAAQ,EAAET,SAAlD;MAAA,UACGA,SAAS,GAAG,qBAAH,GAA2B;IADvC;MAAA;MAAA;MAAA;IAAA,QANF,eAUE;MACE,KAAK,EAAE;QACLW,OAAO,EAAE,MADJ;QAELC,cAAc,EAAE,QAFX;QAGLC,UAAU,EAAE,QAHP;QAILC,SAAS,EAAE;MAJN,CADT;MAAA,uBAQE,QAAC,UAAD;QACE,KAAK,EAAC,MADR;QAEE,OAAO,EAAEd,SAFX;QAGE,IAAI,EAAC,MAHP;QAIE,eAAe,EAAE;MAJnB;QAAA;QAAA;QAAA;MAAA;IARF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GAlFQD,G;;KAAAA,G;AAoFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}